{"version":3,"file":null,"sources":["../src/Notification.js","../src/Notifications.js","../src/index.js"],"sourcesContent":["export default {\r\n    name: 'notification',\r\n    props: {\r\n        message: String,\r\n        icon: String,\r\n        verticalAlign: {\r\n            type: String,\r\n            default: 'top',\r\n            validator: (value) => {\r\n                let acceptedValues = ['top', 'bottom']\r\n                return acceptedValues.indexOf(value) !== -1\r\n            }\r\n        },\r\n        horizontalAlign: {\r\n            type: String,\r\n            default: 'center',\r\n            validator: (value) => {\r\n                let acceptedValues = ['left', 'center', 'right']\r\n                return acceptedValues.indexOf(value) !== -1\r\n            }\r\n        },\r\n        type: {\r\n            type: String,\r\n            default: 'info',\r\n            validator: (value) => {\r\n                let acceptedValues = ['info', 'primary', 'danger', 'warning', 'success']\r\n                return acceptedValues.indexOf(value) !== -1\r\n            }\r\n        },\r\n        timeout: {\r\n            type: Number,\r\n            default: 5000,\r\n            validator: (value) => {\r\n                return value > 0\r\n            }\r\n        },\r\n        timestamp: {\r\n            type: Date,\r\n            default: () => new Date()\r\n        },\r\n        component: {\r\n            type: [Object, Function]\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            elmHeight: 0\r\n        }\r\n    },\r\n    computed: {\r\n        hasIcon () {\r\n            return this.icon && this.icon.length > 0\r\n        },\r\n        alertType () {\r\n            return `alert-${this.type}`\r\n        },\r\n        customPosition () {\r\n            let initialMargin = 20\r\n            let alertHeight = this.elmHeight + 10;\r\n            let sameAlertsCount = this.$notifications.state.filter((alert) => {\r\n                return alert.horizontalAlign === this.horizontalAlign && alert.verticalAlign === this.verticalAlign && alert.timestamp <= this.timestamp\r\n            }).length\r\n            if (this.$notifications.settings.overlap) {\r\n                sameAlertsCount = 1\r\n            }\r\n            let pixels = (sameAlertsCount - 1) * alertHeight + initialMargin\r\n            let styles = {}\r\n            if (this.verticalAlign === 'top') {\r\n                styles.top = `${pixels}px`\r\n            } else {\r\n                styles.bottom = `${pixels}px`\r\n            }\r\n            return styles\r\n        }\r\n    },\r\n    methods: {\r\n        close () {\r\n            this.$emit('close', this.timestamp)\r\n        }\r\n    },\r\n    mounted () {\r\n        this.elmHeight = this.$el.clientHeight\r\n        if (this.timeout) {\r\n            setTimeout(this.close, this.timeout)\r\n        }\r\n    },\r\n    render(h){\r\n        let componentName = this.component\r\n        return (\r\n            <div onClick={this.close}\r\n                 data-notify=\"container\"\r\n                 class={['alert open ', {'alert-with-icon': this.icon}, this.verticalAlign, this.horizontalAlign, this.alertType]}\r\n                 role=\"alert\"\r\n                 style={this.customPosition}\r\n                 data-notify-position=\"top-center\">\r\n                <button\r\n                    type=\"button\"\r\n                    aria-hidden=\"true\"\r\n                    class=\"close col-xs-1\"\r\n                    data-notify=\"dismiss\"\r\n                    onClick={this.close}>Ã—\r\n                </button>\r\n                {\r\n                    this.icon && <span data-notify=\"icon\" class={['alert-icon', this.icon]}></span>\r\n                }\r\n                <span data-notify=\"message\">\r\n            {this.message !== undefined && this.message}\r\n                    {this.component !== undefined &&\r\n                    <this.component></this.component>}\r\n        </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Notification from './Notification.js'\r\nexport default {\r\n    props: {\r\n        transitionName: {\r\n            type: String,\r\n            default: 'list'\r\n        },\r\n        transitionMode: {\r\n            type: String,\r\n            default: 'in-out'\r\n        },\r\n        overlap: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            notifications: this.$notifications.state\r\n        }\r\n    },\r\n    methods: {\r\n        removeNotification (timestamp) {\r\n            this.$notifications.removeNotification(timestamp)\r\n        }\r\n    },\r\n    created(){\r\n        this.$notifications.settings.overlap = this.overlap\r\n    },\r\n    render(){\r\n        const renderedNotifications = this.$notifications.state.map((notification, index) => {\r\n                return <Notification\r\n                    horizontalAlign={notification.horizontalAlign}\r\n                    verticalAlign={notification.verticalAlign}\r\n                    icon={notification.icon}\r\n                    message={notification.message}\r\n                    timeout={notification.timeout}\r\n                    type={notification.type}\r\n                    component={notification.component}\r\n                    timestamp={notification.timestamp}\r\n                    key={notification.timestamp.getTime()} onClose={this.removeNotification}/>\r\n            }\r\n        )\r\n        return (\r\n            <div class=\"notifications\">\r\n                <transition-group name={this.transitionName} mode={this.transitionMode}>\r\n                    {renderedNotifications}\r\n                </transition-group>\r\n            </div>\r\n        )\r\n    },\r\n    watch: {\r\n        overlap: function (newVal) {\r\n            this.$notifications.settings.overlap = newVal\r\n        }\r\n    }\r\n}\r\n","import Notifications from './Notifications.js'\r\n\r\nconst NotificationStore = {\r\n    state: [], // here the notifications will be added\r\n    settings: {\r\n        overlap: false\r\n    },\r\n    removeNotification (timestamp) {\r\n        const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp)\r\n        if (indexToDelete !== -1) {\r\n            this.state.splice(indexToDelete, 1)\r\n        }\r\n    },\r\n    addNotification(notification){\r\n        notification.timestamp = new Date()\r\n        notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length)\r\n        this.state.push(notification)\r\n    },\r\n    notify (notification) {\r\n        if (Array.isArray(notification)) {\r\n            notification.forEach((notificationInstance) => {\r\n                this.addNotification(notificationInstance)\r\n            })\r\n        } else {\r\n            this.addNotification(notification)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nvar NotificationsPlugin = {\r\n    install (Vue) {\r\n        Vue.mixin({\r\n            data(){\r\n                return {\r\n                    notificationStore: NotificationStore\r\n                }\r\n            },\r\n            methods: {\r\n                notify(notification) {\r\n                    this.notificationStore.notify(notification);\r\n                }\r\n            }\r\n        })\r\n        Object.defineProperty(Vue.prototype, '$notify', {\r\n            get () {\r\n                return this.$root.notify\r\n            }\r\n        })\r\n        Object.defineProperty(Vue.prototype, '$notifications', {\r\n            get () {\r\n                return this.$root.notificationStore\r\n            }\r\n        })\r\n        Vue.component('Notifications', Notifications)\r\n    }\r\n}\r\n\r\nexport default NotificationsPlugin\r\n"],"names":["String","value","indexOf","Number","Date","Object","Function","this","icon","length","type","alertHeight","elmHeight","sameAlertsCount","$notifications","state","filter","alert","horizontalAlign","_this","verticalAlign","timestamp","settings","overlap","pixels","styles","top","bottom","$emit","$el","clientHeight","timeout","close","h","component","alert-with-icon","alertType","style","customPosition","data-notify","undefined","message","Boolean","removeNotification","renderedNotifications","map","notification","index","getTime","class","name","transitionName","mode","transitionMode","newVal","NotificationStore","indexToDelete","findIndex","n","splice","setMilliseconds","getMilliseconds","push","Array","isArray","forEach","notificationInstance","addNotification","Vue","mixin","notificationStore","notify","defineProperty","prototype","$root","Notifications"],"mappings":";;;;;sLAAA,aACU,8BAEOA,YACHA,2BAEIA,eACG,gBACE,SAACC,UAEkC,KADpB,MAAO,UACPC,QAAQD,2BAI5BD,eACG,mBACE,SAACC,UAEkC,KADpB,OAAQ,SAAU,SAClBC,QAAQD,gBAI5BD,eACG,iBACE,SAACC,UAEkC,KADpB,OAAQ,UAAW,SAAU,UAAW,WACxCC,QAAQD,mBAI5BE,eACG,cACE,SAACF,SACDA,GAAQ,oBAIbG,aACG,iBAAM,IAAIA,yBAGZC,OAAQC,6CAKJ,uCAKJC,MAAKC,MAAQD,KAAKC,KAAKC,OAAS,uCAGvBF,KAAKG,2CAIjBC,EAAcJ,KAAKK,UAAY,GAC/BC,EAAkBN,KAAKO,eAAeC,MAAMC,OAAO,SAACC,SAC7CA,GAAMC,kBAAoBC,EAAKD,iBAAmBD,EAAMG,gBAAkBD,EAAKC,eAAiBH,EAAMI,WAAaF,EAAKE,YAChIZ,MACCF,MAAKO,eAAeQ,SAASC,YACX,MAElBC,IAAUX,EAAkB,GAAKF,EARjB,GAShBc,WACuB,QAAvBlB,KAAKa,gBACEM,IAASF,SAETG,OAAYH,OAEhBC,mCAKFG,MAAM,QAASrB,KAAKc,qCAIxBT,UAAYL,KAAKsB,IAAIC,aACtBvB,KAAKwB,oBACMxB,KAAKyB,MAAOzB,KAAKwB,0BAG7BE,GACiB1B,KAAK2B,gBAErBD,oBAAc1B,KAAKyB,4BACF,iBAEP,+BAEgB,qBAHb,eAAgBG,kBAAmB5B,KAAKC,MAAOD,KAAKa,cAAeb,KAAKW,gBAAiBX,KAAK6B,WAEtGC,MAAO9B,KAAK+B,iBAEbL,wBACS,uBACO,qBAEA,iBADN,2BAEG1B,KAAKyB,eAGdzB,KAAKC,MAAQyB,iBAAMM,cAAY,eAAe,aAAchC,KAAKC,WAErEyB,iBAAMM,cAAY,iBACJC,KAAjBjC,KAAKkC,SAAyBlC,KAAKkC,YACRD,KAAnBjC,KAAK2B,WACND,OAAMC,wDCxGRlC,eACG,6BAGHA,eACG,wBAGH0C,iBACG,yCAKMnC,KAAKO,eAAeC,6CAInBM,QACXP,eAAe6B,mBAAmBtB,6BAItCP,eAAeQ,SAASC,QAAUhB,KAAKgB,qDAGtCqB,EAAwBrC,KAAKO,eAAeC,MAAM8B,IAAI,SAACC,EAAcC,SAC5Dd,6BACca,EAAa5B,8BACf4B,EAAa1B,mBACtB0B,EAAatC,aACVsC,EAAaL,gBACbK,EAAaf,aAChBe,EAAapC,eACRoC,EAAaZ,oBACbY,EAAazB,eACnByB,EAAazB,UAAU2B,oBAAoB7B,EAAKwB,iCAI7DV,UAAKgB,MAAM,kBACPhB,6BAAkBiB,KAAM3C,KAAK4C,eAAgBC,KAAM7C,KAAK8C,kBACnDT,sBAMJ,SAAUU,QACVxC,eAAeQ,SAASC,QAAU+B,KCnD7CC,+BAGW,+BAEOlC,MACVmC,GAAgBjD,KAAKQ,MAAM0C,UAAU,kBAAKC,GAAErC,YAAcA,KACzC,IAAnBmC,QACKzC,MAAM4C,OAAOH,EAAe,6BAGzBV,KACCzB,UAAY,GAAIjB,QAChBiB,UAAUuC,gBAAgBd,EAAazB,UAAUwC,kBAAoBtD,KAAKQ,MAAMN,aACxFM,MAAM+C,KAAKhB,oBAEZA,aACAiB,OAAMC,QAAQlB,KACDmB,QAAQ,SAACC,KACbC,gBAAgBD,UAGpBC,gBAAgBrB,6BAOpBsB,KACDC,gDAG2Bd,6BAIhBT,QACEwB,kBAAkBC,OAAOzB,cAInC0B,eAAeJ,EAAIK,UAAW,gCAEtBlE,MAAKmE,MAAMH,iBAGnBC,eAAeJ,EAAIK,UAAW,uCAEtBlE,MAAKmE,MAAMJ,uBAGtBpC,UAAU,gBAAiByC"}